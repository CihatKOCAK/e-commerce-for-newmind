services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"  # Kafka'nın Docker ağı içindeki portu
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
    networks:
      - kafka-net
    
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - kafka-net

  backend:
    build:
      context: ./backend
    ports:
      - "3000:3000"
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_URL: redis://redis:6379
    depends_on:
      - kafka
      - zookeeper
      - redis
    networks:
      - kafka-net
    

  invoice-service:
    build:
      context: ./microservices/invoice-service
    ports:
      - "3001:3001"
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
      - zookeeper
    networks:
      - kafka-net

  payment-service:
    build:
      context: ./microservices/payment-service
    ports:
      - "3002:3002"
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
      - zookeeper
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
